C51 COMPILER V9.60.0.0   EEPROM                                                            07/27/2022 15:20:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE eeprom.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Include;.\Include\driver;.\In
                    -clude\types;.\Include\utils;.\Include\security) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) TABS
                    -(2) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "Common.h"
   3          #include "Delay.h"
   4          #include "SFR_Macro.h"
   5          #include "Function_define.h"
   6          #include "eeprom.h"
   7          
   8          void writeToEEPROM(unsigned int address, unsigned char value){
   9   1        unsigned char looptmp = 0;
  10   1        unsigned char u8_addrl_r = 0;
  11   1        unsigned char code *cd_longaddr;
  12   1        unsigned char xdata *xd_tmp;
  13   1        
  14   1      
  15   1        u8_addrl_r = address;
  16   1        
  17   1        if(u8_addrl_r < 0x80)
  18   1        {
  19   2          u8_addrl_r = 0;
  20   2        }
  21   1        else 
  22   1        {
  23   2          u8_addrl_r = 0x80;
  24   2        }
  25   1      
  26   1        xd_tmp = 0x280;
  27   1        cd_longaddr = ((address & 0xff00) + u8_addrl_r);  
  28   1        
  29   1        while(xd_tmp !=0x300)
  30   1        {
  31   2          *xd_tmp = *cd_longaddr;
  32   2          looptmp++;
  33   2          xd_tmp++;
  34   2          cd_longaddr++;
  35   2        }
  36   1      
  37   1        u8_addrl_r = address;
  38   1        
  39   1        if (u8_addrl_r < 0x80)
  40   1        {
  41   2          xd_tmp = (u8_addrl_r + 0x280);
  42   2        }
  43   1        else
  44   1        {
  45   2          xd_tmp = (u8_addrl_r + 0x200);
  46   2        }
  47   1        
  48   1        *xd_tmp = value;
  49   1      
  50   1        IAPAL = address;
  51   1        IAPAH = (address >> 8);
  52   1        IAPFD = 0xFF;
  53   1        set_IAPEN; 
C51 COMPILER V9.60.0.0   EEPROM                                                            07/27/2022 15:20:07 PAGE 2   

  54   1        set_APUEN;
  55   1        IAPCN = 0x22;     
  56   1        set_IAPGO; 
  57   1      
  58   1        u8_addrl_r = address;
  59   1        
  60   1        if (u8_addrl_r < 0x80)
  61   1        {
  62   2          u8_addrl_r = 0;
  63   2        }
  64   1        else
  65   1        {
  66   2          u8_addrl_r = 0x80;
  67   2        }
  68   1        
  69   1        xd_tmp = 0x280;
  70   1        IAPAL = u8_addrl_r;
  71   1        IAPAH = (address >> 8);
  72   1        set_IAPEN; 
  73   1        set_APUEN;
  74   1        IAPCN = 0x21;
  75   1        
  76   1        while(xd_tmp !=0x2FF)
  77   1        {
  78   2          IAPFD = *xd_tmp;
  79   2          set_IAPGO;
  80   2          IAPAL++;
  81   2          xd_tmp++;
  82   2        }
  83   1        
  84   1        clr_APUEN;
  85   1        clr_IAPEN;
  86   1      } 
  87          
  88          
  89          unsigned char readFromEEPROM(unsigned int code *address) {
  90   1        unsigned char value = 0;
  91   1        
  92   1        value = (*address >> 8);
  93   1        
  94   1        return value;
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
